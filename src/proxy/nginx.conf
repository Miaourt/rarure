user  nginx;
worker_processes  auto;

#error_log  /var/log/nginx/error.log warn;
error_log  /dev/stderr warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}


http {
	include		/etc/nginx/mime.types;
	default_type	application/octet-stream;
	log_format main	'$remote_addr - $remote_user [$time_local] "$request" '
			'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" "$http_x_forwarded_for"';
	access_log	/dev/stdout main;
	error_log	/dev/stderr;

	sendfile        on;
	keepalive_timeout  65;
	server_tokens      off;

	map $http_upgrade $connection_upgrade {
	  default upgrade;
	  ''      close;
	}

	upstream backend {
		server web:3000 fail_timeout=0;
	}

	upstream streaming {
		server streaming:4000 fail_timeout=0;
	}

	proxy_cache_path /cache/ levels=1:2 keys_zone=TheSuperCache:10m inactive=7d max_size=1g;

	# Mastodon
	# Src : https://github.com/tootsuite/mastodon/blob/master/dist/nginx.conf

	server {
	  listen 8080;
	  listen [::]:8080;

	  keepalive_timeout    70;
	  sendfile             on;
	  client_max_body_size 80m;

	  root /static/;

	  gzip on;
	  gzip_disable "msie6";
	  gzip_vary on;
	  gzip_proxied any;
	  gzip_comp_level 6;
	  gzip_buffers 16 8k;
	  gzip_http_version 1.1;
	  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	  add_header Strict-Transport-Security "max-age=31536000";

	  location / {
		try_files $uri @proxy;
	  }

	  location ~ ^/(emoji|packs|system/accounts/avatars|system/media_attachments/files) {
		add_header Cache-Control "public, max-age=31536000, immutable";
		add_header Strict-Transport-Security "max-age=31536000";
		try_files $uri @proxy;
	  }

	  location /sw.js {
		add_header Cache-Control "public, max-age=0";
		add_header Strict-Transport-Security "max-age=31536000";
		try_files $uri @proxy;
	  }

	  location @proxy {
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto https;
		proxy_set_header Proxy "";
		proxy_pass_header Server;

		proxy_pass http://backend;
		proxy_buffering on;
		proxy_redirect off;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;

		proxy_cache TheSuperCache;
		proxy_cache_valid 200 7d;
		proxy_cache_valid 410 24h;
		proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
		add_header X-Cached $upstream_cache_status;
		add_header Strict-Transport-Security "max-age=31536000";

		tcp_nodelay on;
	  }

	  location /api/v1/streaming {
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto https;
		proxy_set_header Proxy "";

		proxy_pass http://streaming;
		proxy_buffering off;
		proxy_redirect off;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;

		tcp_nodelay on;
	  }

	  error_page 500 501 502 503 504 /500.html;
	}
	
	# CDN
	# Src : https://gist.github.com/Gargron/40afa9dc37629dfc78d6656f0ca33293

	server {
		listen 8081;

		keepalive_timeout 30;

		#location = / {
		#  index index.html;
		#}

		location / {
			try_files $uri @s3;
		}

		include	env.conf;
  
		location @s3 {
			limit_except GET {
				deny all;
			}

			resolver 127.0.0.11;
			proxy_set_header Host $s3_hostname;
			proxy_set_header Connection '';
			proxy_set_header Authorization '';
			proxy_hide_header Set-Cookie;
			proxy_hide_header 'Access-Control-Allow-Origin';
			proxy_hide_header 'Access-Control-Allow-Methods';
			proxy_hide_header 'Access-Control-Allow-Headers';
			proxy_hide_header x-amz-id-2;
			proxy_hide_header x-amz-request-id;
			proxy_hide_header x-amz-meta-server-side-encryption;
			proxy_hide_header x-amz-server-side-encryption;
			proxy_hide_header x-amz-bucket-region;
			proxy_hide_header x-amzn-requestid;
			proxy_ignore_headers Set-Cookie;
			proxy_pass $s3_backend/$s3_bucket$uri;
			proxy_intercept_errors off;

			proxy_cache TheSuperCache;
			proxy_cache_valid 200 48h;
			proxy_cache_valid 403 15m;
			proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
			proxy_cache_lock on;

			expires 1y;
			add_header Cache-Control public;
			add_header 'Access-Control-Allow-Origin'  '*';
			add_header 'Access-Control-Allow-Methods' 'GET';
			add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
			add_header X-Cache-Status $upstream_cache_status;
		}
  }

}
